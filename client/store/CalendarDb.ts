import { createEntityAdapter, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { CalendarEvent } from '@/constants/types';  // Make sure to import your CalendarEvent type

// Create an entity adapter for CalendarEvent
const calendarEventsAdapter = createEntityAdapter<CalendarEvent>();

// Initial state using the adapter's getInitialState
const initialState = calendarEventsAdapter.getInitialState();

export const calendarEventsSlice = createSlice({
  name: 'calendarDB',
  initialState,
  reducers: {
    // Set all calendar events
    setCalendarEvents: calendarEventsAdapter.setAll,
    
    // Add a new event
    addCalendarEvent: calendarEventsAdapter.addOne,
    
    // Remove an event
    removeCalendarEvent: calendarEventsAdapter.removeOne,
    
    // Update an existing event
    updateCalendarEvent: calendarEventsAdapter.updateOne,
    
    // Upsert (insert or update) an event
    upsertCalendarEvent: calendarEventsAdapter.upsertOne,

    
  },
});

// Export the actions generated by the slice
export const {
  setCalendarEvents,
  addCalendarEvent,
  removeCalendarEvent,
  updateCalendarEvent,
  upsertCalendarEvent,
} = calendarEventsSlice.actions;

// Export the reducer for use in the store
export default calendarEventsSlice.reducer;
